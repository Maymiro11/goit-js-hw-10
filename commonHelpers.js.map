{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport izitoast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport errorIcon from '../img/izitoast-icon.svg';\nimport closeIcon from '../img/izitoast-close.svg';\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const startButton = document.querySelector('[data-start]');\n    const daysElement = document.querySelector('[data-days]');\n    const hoursElement = document.querySelector('[data-hours]');\n    const minutesElement = document.querySelector('[data-minutes]');\n    const secondsElement = document.querySelector('[data-seconds]');\n    const datePicker = document.getElementById('datetime-picker');\n\n    let userSelectedDate;\n\n    flatpickr('#datetime-picker', {\n        enableTime: true,\n        time_24hr: true,\n        defaultDate: new Date(),\n        minuteIncrement: 1,\n        onClose(selectedDates) {\n            const selectedDate = selectedDates[0];\n\n            if (selectedDate < new Date()) {\n                startButton.disabled = true;\n                iziToast.show({\n                    title: 'Error',\n                    message: 'Please choose a date in the future',\n                    class: 'error-message',\n                    position: 'topCenter',\n                    titleColor: '#ffffff',\n                    titleSize: '16px',\n                    titleLineHeight: '1.5',\n                    messageColor: '#ffffff',\n                    messageSize: '16px',\n                    messageLineHeight: '1.5',\n                    backgroundColor: '#ef4040',\n                    icon: '',\n                    iconText: '',\n                    iconColor: '#ffffff',\n                    iconUrl: errorIcon ,\n                    image: '',\n                    imageWidth: 50,\n                    timeout: 10000,\n                    close: false,\n                    buttons: [\n                        [\n                        `<button type=\"button\" style=\"background-color: #EF4040\"><img src=${closeIcon}></button>`,\n                        function (instance, toast) {\n                            instance.hide({ transitionOut: 'fadeOut' }, toast);\n                        },\n                        ],\n                    ],\n                    closeOnEscape: true,\n                    pauseOnHover: false,\n                });\n\n            } else {\n                startButton.disabled = false;\n                userSelectedDate = selectedDate;\n            }\n        },\n    });\n\n    function updateTimerDisplay(timeRemaining) {\n        const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n        daysElement.textContent = formatTime(days);\n        hoursElement.textContent = formatTime(hours);\n        minutesElement.textContent = formatTime(minutes);\n        secondsElement.textContent = formatTime(seconds);\n    }\n\n    function startCountdown() {\n        startButton.disabled = true;\n        const selectedDate = new Date(datePicker.value);\n        const now = new Date();\n\n        const timeRemaining = selectedDate - now;\n        updateTimerDisplay(timeRemaining);\n\n        const timerInterval = setInterval(() => {\n            const currentTimeRemaining = selectedDate - new Date();\n            if (currentTimeRemaining <= 0) {\n                clearInterval(timerInterval);\n                updateTimerDisplay(0);\n                startButton.disabled = false;\n            } else {\n                updateTimerDisplay(currentTimeRemaining);\n            }\n        }, 1000);\n    }\n\n    function formatTime(time) {\n        return time < 10 ? `0${time}` : time;\n    }\n\n    function convertMs(ms) {\n        const second = 1000;\n        const minute = second * 60;\n        const hour = minute * 60;\n        const day = hour * 24;\n\n        const days = Math.floor(ms / day);\n        const hours = Math.floor((ms % day) / hour);\n        const minutes = Math.floor((ms % hour) / minute);\n        const seconds = Math.floor((ms % minute) / second);\n\n        return { days, hours, minutes, seconds };\n    }\n\n    startButton.addEventListener('click', startCountdown);\n});"],"names":["startButton","daysElement","hoursElement","minutesElement","secondsElement","datePicker","flatpickr","selectedDates","errorIcon","closeIcon","instance","toast","updateTimerDisplay","timeRemaining","days","hours","minutes","seconds","convertMs","formatTime","startCountdown","selectedDate","timerInterval","currentTimeRemaining","time","ms"],"mappings":"mJAOA,SAAS,iBAAiB,mBAAoB,UAAW,CACrD,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAa,SAAS,eAAe,iBAAiB,EAI5DC,EAAU,mBAAoB,CAC1B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACEA,EAAc,CAAC,EAEjB,IAAI,MACnBP,EAAY,SAAW,GACvB,SAAS,KAAK,CACV,MAAO,QACP,QAAS,qCACT,MAAO,gBACP,SAAU,YACV,WAAY,UACZ,UAAW,OACX,gBAAiB,MACjB,aAAc,UACd,YAAa,OACb,kBAAmB,MACnB,gBAAiB,UACjB,KAAM,GACN,SAAU,GACV,UAAW,UACX,QAASQ,EACT,MAAO,GACP,WAAY,GACZ,QAAS,IACT,MAAO,GACP,QAAS,CACL,CACA,oEAAoEC,CAAS,aAC7E,SAAUC,EAAUC,EAAO,CACvBD,EAAS,KAAK,CAAE,cAAe,SAAW,EAAEC,CAAK,CACpD,CACA,CACJ,EACD,cAAe,GACf,aAAc,EAClC,CAAiB,GAGDX,EAAY,SAAW,EAG9B,CACT,CAAK,EAED,SAASY,EAAmBC,EAAe,CACvC,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAa,EACjEZ,EAAY,YAAckB,EAAWL,CAAI,EACzCZ,EAAa,YAAciB,EAAWJ,CAAK,EAC3CZ,EAAe,YAAcgB,EAAWH,CAAO,EAC/CZ,EAAe,YAAce,EAAWF,CAAO,CAClD,CAED,SAASG,GAAiB,CACtBpB,EAAY,SAAW,GACvB,MAAMqB,EAAe,IAAI,KAAKhB,EAAW,KAAK,EAGxCQ,EAAgBQ,EAFV,IAAI,KAGhBT,EAAmBC,CAAa,EAEhC,MAAMS,EAAgB,YAAY,IAAM,CACpC,MAAMC,EAAuBF,EAAe,IAAI,KAC5CE,GAAwB,GACxB,cAAcD,CAAa,EAC3BV,EAAmB,CAAC,EACpBZ,EAAY,SAAW,IAEvBY,EAAmBW,CAAoB,CAE9C,EAAE,GAAI,CACV,CAED,SAASJ,EAAWK,EAAM,CACtB,OAAOA,EAAO,GAAK,IAAIA,CAAI,GAAKA,CACnC,CAED,SAASN,EAAUO,EAAI,CAMnB,MAAMX,EAAO,KAAK,MAAMW,EAAK,KAAG,EAC1BV,EAAQ,KAAK,MAAOU,EAAK,MAAO,IAAI,EACpCT,EAAU,KAAK,MAAOS,EAAK,KAAQ,GAAM,EACzCR,EAAU,KAAK,MAAOQ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAX,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACzC,CAEDjB,EAAY,iBAAiB,QAASoB,CAAc,CACxD,CAAC"}